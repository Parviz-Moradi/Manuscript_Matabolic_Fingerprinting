# ---- Install necessary packages if not installed ----
if (!requireNamespace("rgl", quietly = TRUE)) install.packages("rgl")
if (!requireNamespace("htmlwidgets", quietly = TRUE)) install.packages("htmlwidgets")

# ---- Load libraries ----
library(rgl)  # For 3D interactive plots
library(htmlwidgets)  # For saving as HTML

# ---- Load your dataset ----
# Replace this with actual dataset loading code (e.g., read.csv)
data <- overview_grouped_data_xls

# Remove the first and last three columns to keep only relevant data
pareto_scaled_data <- data[, -c(1, 47)]

# Perform PCA without further scaling (assuming data is already scaled)
pca_result <- prcomp(pareto_scaled_data, scale. = FALSE)

# Summary of PCA results
summary_pca <- summary(pca_result)

# Extract PCA loadings
pca_loadings <- as.data.frame(pca_result$rotation)
pca_loadings$Trait <- rownames(pca_loadings)

# Scale the loadings for better visual clarity (adjust scaling factor as needed)
scaling_factor <- 3
pca_loadings_scaled <- pca_loadings[, 1:3] * scaling_factor
pca_loadings_scaled$Trait <- pca_loadings$Trait

# ---- Create 3D Loading Plot ----
open3d()  # Open a new 3D plotting device

# Plot loading vectors (arrows) in 3D for the loadings of PC1, PC2, PC3
for (i in 1:nrow(pca_loadings_scaled)) {
  # Add arrows for the loadings
  segments3d(
    x = c(0, pca_loadings_scaled$PC1[i]), 
    y = c(0, pca_loadings_scaled$PC2[i]), 
    z = c(0, pca_loadings_scaled$PC3[i]), 
    col = "blue", lwd = 2  # Color and width of the arrows
  )
  
  # Add labels at the end of the arrows
  text3d(
    x = pca_loadings_scaled$PC1[i], 
    y = pca_loadings_scaled$PC2[i], 
    z = pca_loadings_scaled$PC3[i], 
    texts = pca_loadings_scaled$Trait[i], 
    col = "blue", adj = 1.2
  )
}

# Set axis labels and titles with thicker axis lines
par3d(linewidth = 3)  # Thicker axis lines
title3d(
  xlab = paste0("PC1 (", round(summary_pca$importance[2, 1] * 100, 2), "%)"),
  ylab = paste0("PC2 (", round(summary_pca$importance[2, 2] * 100, 2), "%)"),
  zlab = paste0("PC3 (", round(summary_pca$importance[2, 3] * 100, 2), "%)"),
  col = "black"
)

# Add 3D axes without additional text
axes3d(edges = "bbox", col = "black", labels = TRUE)

# ---- Render the 3D plot in RStudio Viewer ----
rglwidget()  # Displays the 3D plot in the RStudio viewer

# ---- Save the 3D plot as a static image (PNG) ----
rgl.snapshot("3d_loading_plot_with_axes.png")  # Saves a static image of the plot

# ---- Export the plot as an HTML file ----
htmlwidgets::saveWidget(rglwidget(), "3d_loading_plot_with_axes.html")
