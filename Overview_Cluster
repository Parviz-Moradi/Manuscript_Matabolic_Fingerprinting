# Overview_Cluster by Dr. Parviz Moradi
# Overview_Cluster by Dr. Parviz Moradi
# Load data

data<- Datafile_Absolute

# standardize continuous variables
numeric_data <- data[, -c(1,31)]
rownames (numeric_data)<- data$genotypes # Adding labels as a row number

# Apply Pareto scaling to all 29 variables
pareto_scaled <- apply(numeric_data, 2, function(col) {
  (col - mean(col, na.rm = TRUE)) / sqrt(sd(col, na.rm = TRUE))
})

# Convert result back to a data frame or tibble
pareto_scaled_df <- as.data.frame(pareto_scaled)

# Optional: Retain same column names
colnames(pareto_scaled_df) <- colnames(numeric_data)

# View first few rows
head(pareto_scaled_df)
# Required Libraries
require(factoextra)
require(grDevices)
require(scales)
require(ggsci)
require(openxlsx)  # For saving Excel files
require(dplyr) # For data manipulation
require(tidyr)    # For data reshaping



# Determine and visualize optimal number of clusters ----------------------

library(NbClust)

set.seed(123)

# Run NbClust with KL index
nb_kl <- NbClust(pareto_scaled_df, distance = "euclidean",
                 min.nc = 2, max.nc = 10, method = "kmeans", index = "kl")

# Suggested optimal number of clusters
optimal_kl <- nb_kl$Best.nc[1]
cat("Optimal number of clusters (KL index):", optimal_kl, "\n")

# Optional: plot WSS with vertical line at KL optimal k
library(factoextra)
wss_data <- fviz_nbclust(pareto_scaled_df, kmeans, method = "wss")$data
fviz_nbclust(pareto_scaled_df, kmeans, method = "wss") +
  ggtitle("Elbow Method with KL Optimal Cluster") +
  geom_vline(xintercept = optimal_kl, linetype = 2, color = "red", size = 1) +
  annotate("text", x = optimal_kl + 0.5, y = max(wss_data$y), 
           label = paste("KL Optimal k =", optimal_kl), color = "red", hjust = 0)

# Distance matrix computation
res.dist <- dist(x = pareto_scaled_df, method = "euclidean")

# Hierarchical clustering
res.hc <- hclust(d = res.dist, method = "complete")

# Cluster dendrogram visualization
fviz_dend(x = res.hc, cex = 0.7, lwd = 0.7)

# Open new plotting window (Windows example)
windows()

fviz_dend(res.hc, cex = 0.4, lwd = 0.8, k = 8,
          k_colors = c(
            "6" = "#D73027",  # warm red
            "8" = "#FC8D59",  # coral / salmon
            "3" = "#FEE08B",  # soft yellow
            "4" = "#91CF60",  # fresh green
            "1" = "#1F9E89",  # teal
            "7" = "#4575B4",  # soft blue
            "5" = "#7B3294",  # violet
            "2" = "#F781BF"   # rose pink
          ),
          rect = FALSE,       # << no rectangles drawn
          type = "circular")


# Assign cluster
Datafile_Absolute$Cluster <- cutree(res.hc, k = 8)



# Save
write.xlsx(Datafile_Absolute, file = "Data-cluster_absolute_grouped.xlsx", rowNames = FALSE)
library(dplyr)

# Create a table listing genotypes per cluster
genotypes_per_cluster <- Datafile_Absolute %>%
  select(genotypes, Cluster) %>%
  group_by(Cluster) %>%
  summarise(genotypes = paste(genotypes, collapse = ", "))

# Save to CSV
write.csv(genotypes_per_cluster, file = "genotypes_per_cluster.csv", row.names = FALSE)
