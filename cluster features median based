# cluster features median based
library(dplyr)
library(ggplot2)
library(ggsci)

data <- overview_grouped_data

# Prepare data
voc_data <- data %>%
  select(-genotypes, -Species) %>%
  relocate(Cluster)

# Calculate median for each VOC compound within each cluster
cluster_medians <- voc_data %>%
  group_by(Cluster) %>%
  summarise(across(everything(), median, na.rm = TRUE))

# Function to get top 5 VOCs per cluster based on median
top_vocs_per_cluster <- function(cluster_row) {
  cluster_number <- cluster_row["Cluster"]
  voc_values <- cluster_row[-1]  # exclude 'Cluster' column
  top_vocs <- sort(voc_values, decreasing = TRUE)[1:5]
  data.frame(
    Cluster = cluster_number,
    Compound = names(top_vocs),
    Median_Value = as.numeric(top_vocs)
  )
}

# Apply function
top_compounds <- do.call(rbind, apply(cluster_medians, 1, top_vocs_per_cluster))

# Plot
windows()  # or quartz() on Mac, x11() on Linux
ggplot(top_compounds, aes(x = reorder(Compound, -Median_Value), y = Median_Value, fill = as.factor(Cluster))) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.5), width = 0.5) +
  facet_wrap(~ Cluster, scales = "free") +
  labs(title = "", x = "VOC Compound", y = "Median (absolute quantity)") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12, face = "bold")
  ) +
  scale_fill_manual(values = c("1" = "red", "2" = "blue", "3" = "purple", "4" = "green"))
