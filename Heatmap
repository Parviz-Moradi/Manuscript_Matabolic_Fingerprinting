# heatmap
# Load necessary libraries
library(pheatmap)
library(writexl)  
library(dplyr)    

# Load your dataset
data <- species_percentage_mean 

# Debug: Check structure and dimensions
print(dim(data))
print(head(data))

# Ensure the first column is treated as character (species IDs)
species_ID <- as.character(data[[1]])  
data_matrix <- as.matrix(data[, 2:30])  

# Standardize data (Z-score normalization)
data_matrix <- scale(data_matrix)  

# Debug: Check min and max values after scaling
print(range(data_matrix))  

# Ensure dimensions align
if (nrow(data_matrix) != length(species_ID)) {
  print(paste("Rows in data_matrix:", nrow(data_matrix)))
  print(paste("Length of species_ID:", length(species_ID)))
  stop("Mismatch between the number of rows in data_matrix and the length of species_ID.")
}

# Assign species IDs as row names
rownames(data_matrix) <- species_ID

# Get the true min/max values of the scaled data
min_val <- min(data_matrix)
max_val <- max(data_matrix)

# Set a symmetric scale around zero
abs_max <- max(abs(min_val), abs(max_val))

# Define a color palette
my_palette <- colorRampPalette(c("blue", "white", "red"))(100)

# Create evenly spaced breaks ensuring white is at zero
breaks <- seq(-abs_max, abs_max, length.out = 101)

# Debug: Check breaks range
print(breaks)


pheatmap(t(data_matrix),  # transpose the matrix
         clustering_rows = TRUE,
         clustering_cols = TRUE,
         show_rownames = TRUE,
         show_colnames = TRUE,
         main = "Heatmap of Mean Values by Species",
         color = my_palette,
         breaks = breaks,
         border_color = NA,
         fontsize_col = 10)  # Use fontsize_col instead of fontsize_row after transpose




